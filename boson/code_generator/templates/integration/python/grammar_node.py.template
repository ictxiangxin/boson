{% if boson_code_option['generator']['comment'] == 'True' -%}
"""
    {{ configure.boson_title }} - {{ configure.boson_description }}

        Author: {{ configure.boson_author }}
        Email:  {{ configure.boson_email }}
        Site:   {{ configure.boson_url }}

    File: "grammar_node.py"
    These codes ware generated by the boson Python3 code generator.
"""


{% endif -%}
from __future__ import annotations

from typing import List


class {{ boson_code_option['class_name']['grammar_node'] }}:
    def __init__(self, text: str = ''):
        self.__reduce_number = {{ configure.boson_grammar_default_reduce_number }}
        self.__children: List[{{ boson_code_option['class_name']['grammar_node'] }}] = []
        self.__text: str = text

    def __getitem__(self, item):
        return self.__children[item]

    def get_reduce_number(self) -> int:
        return self.__reduce_number

    def set_reduce_number(self, reduce_number: int) -> None:
        self.__reduce_number: int = reduce_number

    def get_text(self) -> str:
        return self.__text

    def set_text(self, text: str) -> None:
        self.__text: str = text

    def append(self, item) -> None:
        self.__children.append(item)

    def insert(self, index, item) -> None:
        self.__children.insert(index, item)

    def children(self) -> List[{{ boson_code_option['class_name']['grammar_node'] }}]:
        return self.__children

