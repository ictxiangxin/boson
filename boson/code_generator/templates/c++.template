{% if configure.boson_option['code_comment'] -%}
/*
    {{ configure.boson_title }} - {{ configure.boson_description }}

        Author: {{ configure.boson_author }}
        Email:  {{ configure.boson_email }}
        Site:   {{ configure.boson_url }}

    These codes ware generated by the boson C++ code generator.
*/


{% endif -%}
#include <stack>
#include <vector>
#include <set>
#include <unordered_map>
#include <string>
#include <functional>


class {{ configure.boson_option['lexical_token_class_name'] }} {
public:
    {{ configure.boson_option['lexical_token_class_name'] }}() = default;

    {{ configure.boson_option['lexical_token_class_name'] }}(std::string &text, const int line, std::string &symbol): text(text), line(line), symbol(symbol) {};

    {{ configure.boson_option['lexical_token_class_name'] }}(const char *text, const int line, const char *symbol): text(text), line(line), symbol(symbol) {};

    {{ configure.boson_option['lexical_token_class_name'] }}(const char *text, const int line, std::string &symbol): text(text), line(line), symbol(symbol) {};

    {{ configure.boson_option['lexical_token_class_name'] }}(std::string &text, const int line, const char *symbol): text(text), line(line), symbol(symbol) {};

    std::string text{};
    int line = -1;
    std::string symbol{};
};


{% if option.generate_lexer -%}
{% include 'lexer/c++.template'%}


{% endif -%}
{% if option.generate_parser -%}
{% include 'parser/c++.template'%}
{% endif -%}

